package ch.kdev.todo.server;

import junit.framework.TestCase;

import org.junit.Test;

import ch.kdev.todo.domain.Project;
import ch.kdev.todo.server.service.ProjectService;

public class ProjectServiceTest extends TestCase {
   
   private final static String PROJECT_ADD_NAME = "Test Project Name (generated by JUnit)";
   private final static String PROJECT_ADD_DESCRIPTION = "Test Project Description (generated by JUnit) This project should not exist.";
   
   private final static String PROJECT_UPDATE_NAME = "Updated Test Project Name (updated by JUnit)";
   private final static String PROJECT_UPDATE_DESCRIPTION = "Updated Test Project Description (updated by JUnit) This project should not exist.";
   
   private static long ACTIVE_PROJECT_ID; 
   
   ProjectService projectService;

   @Override
   public void setUp() {
       this.projectService = new ProjectService();
   }

   @Test
   public void testAddProject() {
      Project testProject = new Project();
      
      testProject.setName(PROJECT_ADD_NAME);
      testProject.setDescription(PROJECT_ADD_DESCRIPTION);
      
      this.projectService.persist(testProject);
      
      ACTIVE_PROJECT_ID = testProject.getId();
      assertTrue(ACTIVE_PROJECT_ID > 0);
   }

   @Test
   public void testCheckAddedProject(){
      Project project = this.projectService.findProject(ACTIVE_PROJECT_ID);
      
      assertNotNull(project);
      assertEquals(PROJECT_ADD_NAME, project.getName());
      assertEquals(PROJECT_ADD_DESCRIPTION, project.getDescription());
   }
   
   @Test
   public void testUpdateProject(){
      Project project = this.projectService.findProject(ACTIVE_PROJECT_ID);
      
      assertNotNull(project);
      
      project.setName(PROJECT_UPDATE_NAME);
      project.setDescription(PROJECT_UPDATE_DESCRIPTION);
      
      this.projectService.persist(project);
   }
   
   @Test
   public void testCheckUpdatedProject(){
      Project project = this.projectService.findProject(ACTIVE_PROJECT_ID);
      
      assertNotNull(project);
      assertEquals(PROJECT_UPDATE_NAME, project.getName());
      assertEquals(PROJECT_UPDATE_DESCRIPTION, project.getDescription());
   }
   
   @Test
   public void testDeleteProject(){
      Project project = this.projectService.findProject(ACTIVE_PROJECT_ID);
      
      this.projectService.delete(project);
   }
}
