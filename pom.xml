<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>ch.kdev.todo</groupId>
	<artifactId>gwt-mvp-prototype</artifactId>
	<packaging>war</packaging>
	<version>0.1.0</version>

	<properties>
		<!-- Project properties -->
		<target.jdk>1.6</target.jdk>
		<webapp.directory>${project.build.directory}/${project.build.finalName}</webapp.directory>

		<!-- Plugin properties -->
		<gwt.version>2.4.0</gwt.version>
		<hibernate.version>3.6.7.Final</hibernate.version>
		<mysql.version>5.1.18</mysql.version>
		<gwt-maven-plugin.version>2.3.0-1</gwt-maven-plugin.version>
		<maven-compiler-plugin.version>2.3.2</maven-compiler-plugin.version>
		<maven-eclipse-plugin.version>2.8</maven-eclipse-plugin.version>
		<maven-clean-plugin.version>2.4.1</maven-clean-plugin.version>

		<!-- GWT needs at least java 1.6 -->
		<maven.compiler.source>1.6</maven.compiler.source>
		<maven.compiler.target>1.6</maven.compiler.target>

		<!-- Don't let your Mac use a crazy non-standard encoding -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
	</properties>

	<repositories>
		<!-- For hibernate support -->
		<repository>
			<id>jboss</id>
			<url>https://repository.jboss.org/nexus/content/groups/public/</url>
		</repository>
	</repositories>

	<dependencies>
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-servlet</artifactId>
			<version>${gwt.version}</version>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-user</artifactId>
			<version>${gwt.version}</version>
			<scope>provided</scope>
		</dependency>


		<!-- Gin -->
		<dependency>
			<groupId>com.google.gwt.inject</groupId>
			<artifactId>gin</artifactId>
			<version>1.5.0</version>
		</dependency>

		<!-- Hibernate -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>${hibernate.version}</version>
		</dependency>

		<!-- Hibernate gives you a choice of bytecode providers between cglib and 
			javassist -->
		<dependency>
			<groupId>javassist</groupId>
			<artifactId>javassist</artifactId>
			<version>3.9.0.GA</version>
		</dependency>

		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>${mysql.version}</version>
		</dependency>

		<!-- JUnit -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.10</version>
		</dependency>

		<!-- For the servlet filter -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
		</dependency>


		<!-- RequestFactory server -->
		<dependency>
			<groupId>com.google.web.bindery</groupId>
			<artifactId>requestfactory-server</artifactId>
			<version>${gwt.version}</version>
		</dependency>


		<!-- RequestFactory will use JSR 303 javax.validation if you let it -->
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<version>1.0.0.GA</version>
			<classifier>sources</classifier>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>4.0.2.GA</version>
			<exclusions>
				<exclusion>
					<groupId>javax.xml.bind</groupId>
					<artifactId>jaxb-api</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.sun.xml.bind</groupId>
					<artifactId>jaxb-impl</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- Required by Hibernate validator because slf4j-log4j is optional in 
			the hibernate-validator POM -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.6.1</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.6.1</version>
		</dependency>
	</dependencies>

	<build>
		<!-- Generate compiled stuff in the folder used for development mode -->
		<outputDirectory>${webapp.directory}/WEB-INF/classes</outputDirectory>


		<plugins>
			<!-- requestfactory-apt runs an annotation processor (APT) to instrument 
				its service interfaces so that RequestFactoryServer can decode client requests. 
				Normally you would just have a dependency on requestfactory-apt with <scope>provided</scope>, 
				but that won't work in eclipse due to m2e bug https://bugs.eclipse.org/bugs/show_bug.cgi?id=335036 -->
			<plugin>
				<groupId>org.bsc.maven</groupId>
				<artifactId>maven-processor-plugin</artifactId>
				<version>2.0.5</version>
				<executions>
					<execution>
						<id>process</id>
						<goals>
							<goal>process</goal>
						</goals>
						<phase>generate-sources</phase>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>com.google.web.bindery</groupId>
						<artifactId>requestfactory-apt</artifactId>
						<version>${gwt.version}</version>
					</dependency>
				</dependencies>
			</plugin>

			<!-- Google Plugin for Eclipse (GPE) won't see the source generated above 
				by requestfactory-apt unless it is exposed as an additional source dir -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.7</version>
				<executions>
					<execution>
						<id>add-source</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>${project.build.directory}/generated-sources/apt</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>


			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
				<configuration>
					<source>${target.jdk}</source>
					<target>${target.jdk}</target>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>

			<!-- Eclipse configuration -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>${maven-eclipse-plugin.version}</version>
				<configuration>
					<downloadSources>true</downloadSources>
					<downloadJavadocs>true</downloadJavadocs>
					<wtpversion>2.0</wtpversion>
					<additionalBuildcommands>
						<buildCommand>com.google.gwt.eclipse.core.gwtProjectValidator</buildCommand>
					</additionalBuildcommands>
					<additionalProjectnatures>
						<projectnature>com.google.gwt.eclipse.core.gwtNature</projectnature>
						<projectnature>com.google.appengine.eclipse.core.gaeNature</projectnature>
					</additionalProjectnatures>
					<sourceIncludes>
						<sourceInclude>*.ui.xml</sourceInclude>
					</sourceIncludes>
				</configuration>
			</plugin>

			<!-- GWT configuration -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>gwt-maven-plugin</artifactId>
				<version>${gwt-maven-plugin.version}</version>
				<configuration>
					<hostedWebapp>${webapp.directory}</hostedWebapp>
					<copyWebapp>true</copyWebapp>
					<runTarget>Todo.html</runTarget>
					<mode>htmlunit</mode>
					<module>ch.kdev.todo.Todo</module>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>compile</goal>
							<goal>test</goal>
						</goals>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>com.google.gwt</groupId>
						<artifactId>gwt-user</artifactId>
						<version>${gwt.version}</version>
					</dependency>
					<dependency>
						<groupId>com.google.gwt</groupId>
						<artifactId>gwt-dev</artifactId>
						<version>${gwt.version}</version>
					</dependency>
					<dependency>
						<groupId>com.google.gwt</groupId>
						<artifactId>gwt-servlet</artifactId>
						<version>${gwt.version}</version>
					</dependency>
				</dependencies>
			</plugin>

			<!-- maven test plugin -->
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<additionalClasspathElements>
						<additionalClasspathElement>${project.build.sourceDirectory}</additionalClasspathElement>
						<additionalClasspathElement>${project.build.testSourceDirectory}</additionalClasspathElement>
					</additionalClasspathElements>
					<excludes>
						<!-- skip all GwtTest, when executed by maven test plugin -->
						<exclude>**/*GwtTest.java</exclude>
					</excludes>
				</configuration>
			</plugin>

			<!-- Delete gwt generated stuff <plugin> <groupId>org.apache.maven.plugins</groupId> 
				<artifactId>maven-clean-plugin</artifactId> <version>${maven-clean-plugin.version}</version> 
				<configuration> <filesets> <fileset> <directory>.gwt</directory> </fileset> 
				<fileset> <directory>www-test</directory> </fileset> </filesets> </configuration> 
				</plugin> -->
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.bsc.maven</groupId>
										<artifactId>
											maven-processor-plugin
										</artifactId>
										<versionRange>
											[2.0.5,)
										</versionRange>
										<goals>
											<goal>process</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>
